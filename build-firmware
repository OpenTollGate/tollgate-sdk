#!/bin/bash
set -e

# Check and install libncurses5-dev and libncursesw5-dev libraries
install_ncurses_libraries() {
    if ! dpkg -s libncurses5-dev libncursesw5-dev >/dev/null 2>&1; then
        echo "Installing libncurses5-dev and libncursesw5-dev packages..."
        sudo apt-get update
        sudo apt-get install -y libncurses5-dev libncursesw5-dev
    else
        echo "libncurses5-dev and libncursesw5-dev are already installed."
    fi
}

# Install opkg-make-index if not present
install_opkg_make_index() {
    local sdk_path=$1
    local opkg_make_index="${sdk_path}/staging_dir/host/bin/opkg-make-index"
    
    if [ ! -f "${opkg_make_index}" ]; then
        echo "Installing opkg-make-index..."
        mkdir -p "${sdk_path}/staging_dir/host/bin"
        wget https://raw.githubusercontent.com/shr-project/opkg-utils/master/opkg-make-index -O "${opkg_make_index}"
        chmod +x "${opkg_make_index}"
    else
        echo "opkg-make-index is already installed."
    fi
}

# Main script logic
install_ncurses_libraries

# Check if the required arguments are provided
if [ $# -ne 1 ]; then
    echo "Usage: $0 <package_name>"
    exit 1
fi

PACKAGE_NAME=$1
VERSION=23.05.3
SDKDIR=/tmp/openwrt-sdk
PLATFORM="ramips"
SUBTARGET="mt76x8"
SDK_ARCHIVE="openwrt-sdk-${VERSION}-${PLATFORM}-${SUBTARGET}_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
DOWNLOAD_URL="https://downloads.openwrt.org/releases/${VERSION}/targets/${PLATFORM}/${SUBTARGET}/${SDK_ARCHIVE}"

# Prepare SDK directory
if [ ! -d "${SDKDIR}" ] ; then
  mkdir -p "${SDKDIR}"
fi

if [ ! -d "${SDKDIR}/openwrt-sdk" ] ; then
  if [ ! -f "${SDKDIR}/${SDK_ARCHIVE}" ]; then
    (cd "${SDKDIR}" && curl -O "${DOWNLOAD_URL}")
  fi
  tar -xf "${SDKDIR}/${SDK_ARCHIVE}" -C "${SDKDIR}"
fi

SDK_PATH=$(find "${SDKDIR}" -maxdepth 1 -type d -name "openwrt-sdk-*")
cd "${SDK_PATH}"

# Install opkg-make-index
install_opkg_make_index "${SDK_PATH}"

# Update and install feeds
./scripts/feeds update -a
./scripts/feeds install -a

# Copy the custom package into the SDK
cp -r ~/TollGate/openwrt_helloworld/"${PACKAGE_NAME}" package/

# Configure the SDK to include the package
make defconfig

# Build the package
make package/"${PACKAGE_NAME}"/compile V=s

# Move built package to a local directory
BUILT_PACKAGE_PATH=$(find bin/packages -name "${PACKAGE_NAME}_*.ipk")
DEST_DIR=~/local_feed

mkdir -p "${DEST_DIR}"
cp "${BUILT_PACKAGE_PATH}" "${DEST_DIR}"

# Generate package index using opkg-make-index from the SDK
cd "${DEST_DIR}"
"${SDK_PATH}"/staging_dir/host/bin/opkg-make-index . > Packages
gzip -k Packages

echo "Package ${PACKAGE_NAME} has been built and stored in ${DEST_DIR}"
